# nginx.conf
worker_processes  auto;

events {
    worker_connections  1024;
}

###
# STREAM BLOCK
###

stream {
    # -- 1515 --
    upstream wazuh_manager_1515 {
        server ${backendIP}:1515;
    }
    server {
        listen 1515;
        proxy_pass wazuh_manager_1515;
    }

    # -- 1514 --
    upstream wazuh_manager_1514 {
        server ${backendIP}:1514;
    }
    server {
        listen 1514;
        proxy_pass wazuh_manager_1514;
    }

    # -- 55000 --
    upstream wazuh_manager_55000 {
        server ${backendIP}:55000;
    }
    server {
        listen 55000;
        proxy_pass wazuh_manager_55000;
    }
}

###
# HTTP BLOCK
###

http {

    include       mime.types;
    default_type  application/octet-stream;

    # Enable debug logging
    error_log /var/log/nginx/error.log debug;

    # enable access logging 
    access_log /var/log/nginx/access.log;

    ###
    # SERVER BLOCKS
    ###

    #--------------------------------------------------
    # WEB PAGE: ${BASE_DOMAIN}
    #--------------------------------------------------

    # Redirect HTTP â†’ HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name localhost ${HOSTNAME} ${BASE_DOMAIN}; # or _ for any host
        return 301 https://$host$request_uri;
    }

    server {
         listen 443 ssl http2;
         listen [::]:443 ssl http2;
         server_name localhost ${HOSTNAME} ${BASE_DOMAIN}; # or _ for any host

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://${backendIP}:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #--------------------------------------------------
    # WAZUH WEB UI: wazuh.${BASE_DOMAIN}
    #--------------------------------------------------

    server {
        listen 80;
        listen [::]:80;
        server_name localhost ${HOSTNAME} wazuh.${BASE_DOMAIN};
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost ${HOSTNAME} wazuh.${BASE_DOMAIN};

        ssl_certificate /etc/nginx/certs/wazuh.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/wazuh.privkey.pem;
        location / {
            proxy_pass https://${backendIP}:5601/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #--------------------------------------------------
    # WIKI_JS WEB UI: wiki.${BASE_DOMAIN}
    #--------------------------------------------------

    # Redirect HTTP traffic to HTTPS for Wiki.js
    server {
        listen 80;
        listen [::]:80;
        server_name localhost ${HOSTNAME} wiki.${BASE_DOMAIN};
        return 301 https://$host$request_uri; # Redirect to HTTPS
    }

    # HTTPS  for Wiki.js
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost ${HOSTNAME} wiki.${BASE_DOMAIN};

        # SSL certificates
        ssl_certificate /etc/nginx/certs/wiki.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/wiki.privkey.pem;

        # Increase buffer sizes (optional, for large responses)
        client_max_body_size 50M; # Adjust as needed
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Proxy settings for Wiki.js
        location / {
            proxy_pass http://${backendIP}:11080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle WebSocket connections
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
