# nginx.conf
worker_processes  auto;

events {
    worker_connections  1024;
}

# The HTTP block
http {

    include       mime.types;
    default_type  application/octet-stream;

    # Enable debug logging
    error_log /var/log/nginx/error.log warn;

    # enable access logging
    access_log /var/log/nginx/access.log;
    
    ###
    # Web block for `cybermonkey.net.au`
    ###

    # Redirect HTTP traffic to HTTPS for `cybermonkey.net.au`
    server {
        listen 80;
        server_name localhost <hostname> cybermonkey.net.au; # or _ for any host
        return 301 https://$host$request_uri;         # Redirect all HTTP traffic to HTTPS
    }

    # HTTPS for `cybermonkey.net.au`
    server {
        listen 443 ssl;
        server_name localhost <hostname> cybermonkey.net.au; # or _ for any host

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://<backendIP>:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
    
    ###
    # Wiki.js block for `wiki.cybermonkey.net.au`
    ###
    
    # Redirect HTTP traffic to HTTPS for Wiki.js
    server {
        listen 80;
        server_name wiki.cybermonkey.net.au;
        return 301 https://$host$request_uri; # Redirect to HTTPS
    }

    # HTTPS  for Wiki.js
    server {
        listen 443 ssl;
        server_name wiki.cybermonkey.net.au;

        # SSL certificates
        ssl_certificate /etc/nginx/certs/wiki.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/wiki.privkey.pem;

        # Increase buffer sizes (optional, for large responses)
        client_max_body_size 50M; # Adjust as needed
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Proxy settings for Wiki.js
        location / {
            proxy_pass http://<backendIP>:11080; # Refer to the Wiki.js service name and port in Docker Compose
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle WebSocket connections
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Cache and compression headers
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Accept-Encoding "";
    
            # Set default timeout values
            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
        }
    
        # Serve static files (optional)
        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|woff2?|eot|ttf|otf|ttc|html|json)$ {
            proxy_pass http://<backendIP>:11080;
            expires max;
            log_not_found off;
            access_log off;
            
        }
    }

    
    # server {
    #     listen 80;
    #     server_name <WebApp FQDN>;
    #     return 301 https://$host$request_uri;
    # }

    # server {
    #     listen 443 ssl;
    #     server_name <WebApp FQDN>;
    #     ssl_certificate /etc/nginx/certs/wazuh.fullchain.pem;
    #     ssl_certificate_key /etc/nginx/certs/wazuh.privkey.pem;
    #     location / {
    #         proxy_pass https://<backendIP>:<backendPort>/;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}
