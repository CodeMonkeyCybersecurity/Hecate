# nginx.conf
worker_processes  auto;

events {
    worker_connections  1024;
}


###
# STREAM BLOCK
###


# stream {            # Uncomment this if using any applications which have 'stream' blocks


    #--------------------------------------------------
    # WAZUH STREAM
    #--------------------------------------------------
;      upstream wazuh_manager_1515 {
;          server {WAZUH_BACKEND_IP}:1515;
;      }
;      server {
;          listen 1515;
;          proxy_pass wazuh_manager_1515;
;      }

;      upstream wazuh_manager_1514 {
;          server {WAZUH_BACKEND_IP}:1514;
;      }
;      server {
;          listen 1514;
;          proxy_pass wazuh_manager_1514;
;      }
;  }


    #--------------------------------------------------
    # MAILCOW STREAM
    #--------------------------------------------------

    #--------------------------------------------------
    # MATTERMOST STREAM
    #--------------------------------------------------
;    upstream backend {
;       server 10.10.10.2:8065;
;       keepalive 32;
;    }



###
# HTTP BLOCK for Web UI
###

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Enable debug logging
    error_log /var/log/nginx/error.log debug;

    # enable access logging 
    access_log /var/log/nginx/access.log;


    #--------------------------------------------------
    # WEB: domain.com
    #--------------------------------------------------
    # Redirect HTTP â†’ HTTPS
    server {
        listen 80 default_server;
        server_name ${WEB_SERVER_NAMES}; # or _ for any host

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # The HTTPS server for domain.com
    server {
        listen 443 ssl default_server;
        server_name ${WEB_SERVER_NAMES}; # or _ for any host

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://${WEB_BACKEND_IP}:${WEB_BACKEND_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }


    #--------------------------------------------------
    # ELK STACK: elk.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${ELK_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${ELK_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${ELK_BACKEND_IP}:${ELK_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }
 

    #--------------------------------------------------
    # GRAFANA: grafana.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${GRAFANA_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${GRAFANA_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${GRAFANA_BACKEND_IP}:${GRAFANA_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # JENKINS: jenkins.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${JENKINS_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${JENKINS_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${JENKINS_BACKEND_IP}:${JENKINS_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # KEYCLOAK: keycloak.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${KEYCLOAK_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${KEYCLOAK_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${KEYCLOAK_BACKEND_IP}:${KEYCLOAK_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }
    
    
    #--------------------------------------------------
    # MAILCOW WEB UI: mail.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${MAILCOW_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${MAILCOW_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${MAILCOW_BACKEND_IP}:${MAILCOW_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # MATTERMOST: mattermost.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${MATTERMOST_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${MATTERMOST_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${MATTERMOST_BACKEND_IP}:${MATTERMOST_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # NEBULA: nebula.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${NEBULA_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${NEBULA_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${NEBULA_BACKEND_IP}:${NEBULA_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }
    
    #--------------------------------------------------
    # NEXTCLOUD: nextcloud.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${NEXTCLOUD_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${NEXTCLOUD_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${NEXTCLOUD_BACKEND_IP}:${NEXTCLOUD_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }


    #--------------------------------------------------
    # OPENSTACK: oc.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${OPENSTACK_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${OPENSTACK_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${OPENSTACK_BACKEND_IP}:${OPENSTACK_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # RESTIC: restic.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${RESTIC_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${RESTIC_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${RESTIC_BACKEND_IP}:${RESTIC_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # SECURITY ONION: soc.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80 default_server;
    ;     server_name ${SOC_SERVER_NAMES};

    ;     # Redirect all HTTP traffic to HTTPS
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl default_server;
    ;     server_name ${SOC_SERVER_NAMES};

    ;     ssl_certificate /etc/nginx/certs/fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ;     location / {
    ;         proxy_pass http://${SOC_BACKEND_IP}:${SOC_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }


    #--------------------------------------------------
    # WAZUH: wazuh.domain.com
    #--------------------------------------------------
    ; server {
    ;     listen 80;
    ;     server_name {WAZUH_SERVER_NAMES};
    ;     return 301 https://$host$request_uri;
    ; }

    ; server {
    ;     listen 443 ssl;
    ;     server_name {WAZUH_SERVER_NAMES};
    ;     ssl_certificate /etc/nginx/certs/wazuh.fullchain.pem;
    ;     ssl_certificate_key /etc/nginx/certs/wazuh.privkey.pem;
    ;     location / {
    ;         proxy_pass https://${WAZUH_BACKEND_IP}:${WAZUH_BACKEND_PORT};
    ;         proxy_set_header Host $host;
    ;         proxy_set_header X-Real-IP $remote_addr;
    ;         proxy_set_header X-Forwarded-Proto $scheme;
    ;     }
    ; }

    
    #--------------------------------------------------
    # 123) EXAMPLE: example.domain.com
    #-------------------------------------------------- 

}

    
